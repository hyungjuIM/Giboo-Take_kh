<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="event-mapper">

	<!-- 이벤트 목록 조회용 resultMap -->
	<resultMap type="eventList" id="eventList_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="attachment" column="ATTACHMENT" />
		<result property="eventTitle" column="EVENT_TITLE" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="endRecruitDate" column="END_RECRUIT_DATE" />
		<result property="targetPeople" column="TARGET_PEOPLE" />
	</resultMap>

	<!-- 이벤트 디테일 top 조회용 resultMap -->
	<resultMap type="eventDetailTop" id="eventDetailTop_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="attachment" column="ATTACHMENT" />
		<result property="eventTitle" column="EVENT_TITLE" />
		<result property="targetPeople" column="TARGET_PEOPLE" />
		<result property="eventPersonNo" column="EVENT_PERSON_NO" />

	</resultMap>

	<!-- 이벤트 디테일 멤버 조회용 resultMap -->
	<resultMap type="eventDetailMember" id="eventDetailMember_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="profileImg" column="PROFILE_IMG" />
		<result property="memberNick" column="MEMBER_NICK" />
	</resultMap>

	<resultMap type="eventDetailLeft"
		id="selectEventDetailLeft_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="eventContent" column="EVENT_CONTENT" />
	</resultMap>

	<resultMap type="eventStickerBar"
		id="selectEventStickerBar_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="eventCertificationAttachment"
			column="EVENT_CERTIFICATION_ATTACHMENT" />
	</resultMap>

	<resultMap type="eventDetailBoardPhoto"
		id="selectEventDetailBoardPhoto_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="eventCertificationAttachment"
			column="EVENT_CERTIFICATION_ATTACHMENT" />
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="eventCertiEnrollDate"
			column="EVENT_CERTIFICATION_DATE" />
	</resultMap>


	<resultMap type="eventMore" id="eventMore_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="attachment" column="ATTACHMENT" />
		<result property="eventTitle" column="EVENT_TITLE" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="endRecruitDate" column="END_RECRUIT_DATE" />
	</resultMap>

	<resultMap type="eventCertification"
		id="eventCertification_rm">
		<id property="eventNo" column="EVENT_NO" />
		<result property="eventTitle" column="EVENT_TITLE" />
		<result property="eventCertificationContent"
			column="EVENT_CERTIFICATION_CONTENT" />
	</resultMap>

	<resultMap type="stamp" id="stamp_rm">
		<id property="stampNo" column="STAMP_NO" />
		<result property="stampAttachment" column="STAMP_ATTACHMENT" />
	</resultMap>


	<!-- 페이지네이션 목록 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM EVENT
		WHERE MODI_STATUS = 'N'
	</select>

	<!-- 종료 페이지네이션 목록 조회 -->
	<select id="getListCountDone" resultType="_int">
		SELECT COUNT(*) FROM
		EVENT
		WHERE MODI_STATUS = 'N'
		AND TRUNC(END_RECRUIT_DATE) &lt;=
		TRUNC(CURRENT_TIMESTAMP)
	</select>

	<!-- 진행중 페이지네이션 목록 조회 -->
	<select id="getListCountGoing" resultType="_int">
		SELECT COUNT(*) FROM
		EVENT
		WHERE MODI_STATUS = 'N'
		AND TRUNC(END_RECRUIT_DATE) -
		TRUNC(CURRENT_TIMESTAMP) &gt; 0
	</select>

	<!-- 이벤트 목록 조회 -->
	<select id="selectEventList" resultMap="eventList_rm">
		SELECT
		ATTACHMENT,
		CASE
		WHEN TRUNC(END_RECRUIT_DATE) &lt;= TRUNC(CURRENT_TIMESTAMP) THEN '종료'
		WHEN TRUNC(END_RECRUIT_DATE) - TRUNC(CURRENT_TIMESTAMP) &lt;= 5 THEN
		'마감임박'
		ELSE '진행중'
		END AS RESULT,
		EVENT_TITLE,
		TO_CHAR(ENROLL_DATE,
		'YYYY-MM-DD') AS ENROLL_DATE,
		TO_CHAR(END_RECRUIT_DATE, 'YYYY-MM-DD')
		AS END_RECRUIT_DATE,
		COALESCE(EP.EVENTPERSONCOUNT, 0) AS
		EVENTPERSONCOUNT,
		EVENT.TARGET_PEOPLE,
		EVENT.EVENT_NO
		FROM EVENT
		LEFT JOIN
		(
		SELECT EVENT_NO, COUNT(DISTINCT MEMBER_NO) AS EVENTPERSONCOUNT
		FROM
		EVENT_PERSON
		GROUP BY EVENT_NO
		) EP ON EVENT.EVENT_NO = EP.EVENT_NO
		WHERE MODI_STATUS =
		'N'
		ORDER BY EVENT.EVENT_NO DESC
	</select>

	<!-- 종료 이벤트 목록 조회 -->
	<select id="selectEventListDone" resultMap="eventList_rm">
		SELECT
		ATTACHMENT,
		CASE
		WHEN TRUNC(END_RECRUIT_DATE) &lt;= TRUNC(CURRENT_TIMESTAMP) THEN
		'종료'
		WHEN TRUNC(END_RECRUIT_DATE) - TRUNC(CURRENT_TIMESTAMP) &lt;= 5
		THEN
		'마감임박'
		ELSE '진행중'
		END AS RESULT,
		EVENT_TITLE,
		TO_CHAR(ENROLL_DATE ,
		'YYYY-MM-DD') AS ENROLL_DATE,
		TO_CHAR(END_RECRUIT_DATE , 'YYYY-MM-DD')
		AS END_RECRUIT_DATE,
		COALESCE(EP.EVENTPERSONCOUNT, 0) AS
		EVENTPERSONCOUNT,
		EVENT.TARGET_PEOPLE ,
		EVENT.EVENT_NO
		FROM EVENT
		LEFT
		JOIN (
		SELECT EVENT_NO, COUNT(DISTINCT MEMBER_NO) AS EVENTPERSONCOUNT
		FROM EVENT_PERSON
		GROUP BY EVENT_NO
		) EP ON EVENT.EVENT_NO = EP.EVENT_NO
		WHERE MODI_STATUS =
		'N'
		AND TRUNC(END_RECRUIT_DATE) &lt;=
		TRUNC(CURRENT_TIMESTAMP)
		ORDER BY EVENT.EVENT_NO DESC
	</select>

	<!-- 진행중 이벤트 목록 조회 -->
	<select id="selectEventListGoing" resultMap="eventList_rm">
		SELECT
		ATTACHMENT,
		CASE
		WHEN TRUNC(END_RECRUIT_DATE) &lt;= TRUNC(CURRENT_TIMESTAMP) THEN
		'종료'
		WHEN TRUNC(END_RECRUIT_DATE) - TRUNC(CURRENT_TIMESTAMP) &lt;= 5
		THEN
		'마감임박'
		ELSE '진행중'
		END AS RESULT,
		EVENT_TITLE,
		TO_CHAR(ENROLL_DATE ,
		'YYYY-MM-DD') AS ENROLL_DATE,
		TO_CHAR(END_RECRUIT_DATE , 'YYYY-MM-DD')
		AS END_RECRUIT_DATE,
		COALESCE(EP.EVENTPERSONCOUNT, 0) AS
		EVENTPERSONCOUNT,
		EVENT.TARGET_PEOPLE ,
		EVENT.EVENT_NO
		FROM EVENT
		LEFT
		JOIN (
		SELECT EVENT_NO, COUNT(DISTINCT MEMBER_NO) AS EVENTPERSONCOUNT
		FROM EVENT_PERSON
		GROUP BY EVENT_NO
		) EP ON EVENT.EVENT_NO = EP.EVENT_NO
		WHERE MODI_STATUS =
		'N'
		AND TRUNC(END_RECRUIT_DATE) -
		TRUNC(CURRENT_TIMESTAMP) &gt; 0
		ORDER BY
		EVENT.EVENT_NO DESC
	</select>

	<!-- 이벤트 디테일 TOP -->
	<select id="selectEventDetailTop" resultMap="eventDetailTop_rm">
		SELECT
		e.ATTACHMENT,
		TRUNC(END_RECRUIT_DATE) - TRUNC(CURRENT_TIMESTAMP) AS RESULT,
		e.EVENT_TITLE,
		(
		SELECT COUNT(*)
		FROM FAVORITES F
		WHERE F.EVENT_NO =
		e.EVENT_NO
		) AS EVENTFAVCOUNT,
		COALESCE(EP.EVENTPERSONCOUNT, 0) AS
		EVENTPERSONCOUNT,
		e.TARGET_PEOPLE,
		e.EVENT_NO

		FROM EVENT e
		LEFT JOIN (
		SELECT EVENT_NO, COUNT(EVENT_PERSON_NO) AS EVENTPERSONCOUNT
		FROM
		EVENT_PERSON
		GROUP BY EVENT_NO
		) EP ON e.EVENT_NO = EP.EVENT_NO
		WHERE
		e.EVENT_NO =
		${eventNo}

	</select>

	<select id="selectEventDetailMember"
		resultMap="eventDetailMember_rm">
		SELECT M.PROFILE_IMG, M.MEMBER_NICK
		FROM EVENT E
		INNER JOIN (
		SELECT DISTINCT MEMBER_NO, EVENT_NO
		FROM EVENT_PERSON
		) EP ON E.EVENT_NO
		= EP.EVENT_NO
		INNER JOIN MEMBER M ON
		EP.MEMBER_NO = M.MEMBER_NO
		WHERE
		E.EVENT_NO = ${eventNo}
	</select>

	<select id="selectEventDetailLeft"
		resultMap="selectEventDetailLeft_rm">
		SELECT EVENT_CONTENT
		FROM EVENT
		WHERE EVENT_NO = ${eventNo}
	</select>

	<select id="selectEventStickerBar"
		resultMap="selectEventStickerBar_rm">
		SELECT EC.EVENT_CERTIFICATION_ATTACHMENT
		FROM
		EVENT_CERTIFICATION EC
		INNER JOIN EVENT_PERSON EP ON EC.EVENT_PERSON_NO
		= EP.EVENT_PERSON_NO
		WHERE EP.EVENT_NO = ${eventNo}
	</select>




	<!-- -->

	<insert id="insertPopup" parameterType="eventPopup">

		<!-- <selectKey keyProperty="eventNo" resultType="_int" order="BEFORE"> 
			SELECT SEQ_EVENT_NO.NEXTVAL FROM DUAL </selectKey> -->

		INSERT INTO EVENT_PERSON (EVENT_PERSON_NO, CERTIFICATION_STATUS,
		MEMBER_NO, EVENT_NO)
		VALUES (SEQ_EVENT_PERSON_NO.NEXTVAL, 'Y',
		#{memberNo}, #{eventNo})
	</insert>

	<insert id="insertImage">
		INSERT INTO EVENT_CERTIFICATION
		(EVENT_CERTIFICATION_NO, EVENT_CERTIFICATION_DATE,
		EVENT_CERTIFICATION_ATTACHMENT, EVENT_PERSON_NO)
		VALUES
		(SEQ_EVENT_CERTIFICATION_NO.NEXTVAL, DEFAULT,
		#{eventCertificationAttachment}, (SELECT EVENT_PERSON_NO FROM (SELECT
		EVENT_PERSON_NO FROM EVENT_PERSON ORDER BY EVENT_PERSON_NO DESC) WHERE
		ROWNUM = 1))
	</insert>

	<insert id="insertMyActiveEventList"
		parameterType="myActiveEventList">
		INSERT INTO MYACTIVE_EVENT (MYACTIVE_EVENT_NO,
		MYACTIVE_DATE, VOLUNTEER_COMPLETE_STATUS, MEMBER_NO, EVENT_NO)
		VALUES
		(MYACTIVE_3_SEQ.NEXTVAL, DEFAULT, 'Y', #{memberNo}, #{eventNo})
	</insert>

	<insert id="insertStamp" parameterType="stamp">
		INSERT INTO STAMP
		(STAMP_NO, EVENT_NO, MEMBER_NO, STAMP_ATTACHMENT)
		VALUES
		(SEQ_STAMP_NO.NEXTVAL, #{eventNo}, #{memberNo},
		'/resources/images/hunnyLogo/hunnyLogo.png')
	</insert>


	<insert id="insertAlarm" parameterType="alarm">
		INSERT INTO ALARM
		(ALARM_NO, ALARM_CONTENT, ALARM_DATE, READ_STATUS, MEMBER_NO,
		EVENT_NO)
		VALUES (SEQ_ALARM_NO.NEXTVAL, (SELECT EVENT_TITLE FROM EVENT
		WHERE EVENT_NO = #{eventNo}), DEFAULT, 'N', #{memberNo}, #{eventNo})
	</insert>

	<select id="selectEventDetailBoardPhoto"
		resultMap="selectEventDetailBoardPhoto_rm">
		SELECT
		EC.EVENT_CERTIFICATION_ATTACHMENT,
		M.MEMBER_NICK,
		CASE
		WHEN TRUNC(SYSDATE) = TRUNC(EC.EVENT_CERTIFICATION_DATE) THEN
		TO_CHAR(TRUNC(SYSDATE - EC.EVENT_CERTIFICATION_DATE) * 24)
		ELSE
		TO_CHAR(TRUNC(SYSDATE - EC.EVENT_CERTIFICATION_DATE))
		END AS
		TIME_DIFFERENCE
		,EP.EVENT_NO
		FROM EVENT_CERTIFICATION EC
		INNER JOIN
		EVENT_PERSON EP ON EC.EVENT_PERSON_NO = EP.EVENT_PERSON_NO
		INNER JOIN
		MEMBER M ON EP.MEMBER_NO = M.MEMBER_NO
		WHERE EP.EVENT_NO = ${eventNo}
	</select>


	<!-- 즐겨찾기 중복 -->
	<select id="checkFavorite" resultType="boolean">
		SELECT COUNT(*) AS COUNT
		FROM FAVORITES f
		WHERE f.EVENT_NO = #{eventNo} AND f.MEMBER_NO =
		#{memberNo}
	</select>

	<!-- 즐겨찾기 추가 -->
	<insert id="insertFav">
		INSERT INTO FAVORITES (FAVORITE_NO, FAVORITE_STATUS,
		MEMBER_NO, EVENT_NO)
		VALUES (SEQ_FAVORITE_NO.NEXTVAL, 'Y', #{memberNo},
		#{eventNo})
	</insert>

	<!-- 이벤트 참여자 중복확인 -->
	<select id="checkAlreadyJoined" resultType="boolean">
		SELECT COUNT(*) AS
		COUNT
		FROM EVENT_PERSON
		WHERE MEMBER_NO = #{memberNo} AND EVENT_NO =
		#{eventNo}
	</select>


	<select id="selectEventMore" resultMap="eventMore_rm">
		SELECT
		ATTACHMENT,
		CASE
		WHEN TRUNC(END_RECRUIT_DATE) &lt;= TRUNC(CURRENT_TIMESTAMP) THEN '종료'
		WHEN TRUNC(END_RECRUIT_DATE) - TRUNC(CURRENT_TIMESTAMP) &lt;= 5 THEN
		'마감임박'
		ELSE '진행중'
		END AS RESULT,
		EVENT_TITLE,
		TO_CHAR(ENROLL_DATE,
		'YYYY-MM-DD') AS ENROLL_DATE,
		TO_CHAR(END_RECRUIT_DATE, 'YYYY-MM-DD')
		AS END_RECRUIT_DATE,
		EVENT.EVENT_NO
		FROM EVENT
		WHERE MODI_STATUS = 'N'
		AND TRUNC(END_RECRUIT_DATE) - TRUNC(CURRENT_TIMESTAMP) &gt; 0
		ORDER BY
		EVENT.EVENT_NO DESC
	</select>



	<select id="selectEventCertification"
		resultMap="eventCertification_rm">
		SELECT
		EVENT_TITLE
		, EVENT_CERTIFICATION_CONTENT
		FROM EVENT E
		WHERE EVENT_NO = #{eventNo}
	</select>


	<select id="checkEventEnded" resultType="boolean">
		SELECT
		CASE
		WHEN
		TRUNC(END_RECRUIT_DATE) &lt;= TRUNC(CURRENT_TIMESTAMP) THEN 1
		ELSE 0
		END AS IS_ENDED
		FROM EVENT
		WHERE EVENT_NO = #{eventNo}
	</select>



	<select id="getStamps" resultMap="stamp_rm">
		SELECT
		STAMP_NO ,
		STAMP_ATTACHMENT
		FROM STAMP
		WHERE MEMBER_NO = #{memberNo}
	</select>


	<insert id="addReward">
		<!--INSERT INTO POINT (POINT_NO, POINT_CONTENT , MEMBER_NO, POINT_PRICE) 
			VALUES (SEQ_POINT_NO.NEXTVAL, '이벤트 참여 완료' , #{memberNo}, 2000) -->

		UPDATE MEMBER
		SET POINT_PRICE = COALESCE(POINT_PRICE, 0) + 2000
		WHERE
		MEMBER_NO = #{memberNo}
	</insert>

	<delete id="deleteStamps" parameterType="int">
		DELETE FROM STAMP
		WHERE
		MEMBER_NO = #{memberNo}
	</delete>


	
	 <select id="getEventStatus" resultType="boolean">
		SELECT CASE
		WHEN COUNT(*) &gt; 0 THEN 1
		ELSE 0
		END AS IS_ENDED
		FROM EVENT
		WHERE EVENT_NO = #{eventNo}
		AND TRUNC(END_RECRUIT_DATE) &lt;= TRUNC(CURRENT_TIMESTAMP) 
	</select> 


</mapper>
